{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[questions,setQuestions]=useState([]);const[selectedAnswers,setSelectedAnswers]=useState({});const[feedback,setFeedback]=useState({});// questionId => feedback\nuseEffect(()=>{axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/quiz`).then(res=>setQuestions(res.data)).catch(err=>console.error(err));},[]);const handleOptionClick=(questionId,selectedOption,correctAnswer)=>{setSelectedAnswers(prev=>({...prev,[questionId]:selectedOption}));setFeedback(prev=>({...prev,[questionId]:selectedOption===correctAnswer?'✅ Correct!':'❌ Wrong!'}));// Auto-clear feedback for this question after 2s\nsetTimeout(()=>{setFeedback(prev=>{const newFeedback={...prev};delete newFeedback[questionId];return newFeedback;});},2000);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Quiz App\"}),questions.map(q=>/*#__PURE__*/_jsxs(\"div\",{className:\"question-box\",children:[/*#__PURE__*/_jsx(\"h3\",{children:q.question}),q.options.map((opt,i)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleOptionClick(q.id,opt,q.answer),disabled:selectedAnswers[q.id]!==undefined// Disable after answering\n,style:{backgroundColor:selectedAnswers[q.id]===opt?opt===q.answer?'lightgreen':'salmon':'white'},children:opt},i)),feedback[q.id]&&/*#__PURE__*/_jsx(\"p\",{className:\"feedback\",children:feedback[q.id]})]},q.id))]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","axios","jsx","_jsx","jsxs","_jsxs","App","questions","setQuestions","selectedAnswers","setSelectedAnswers","feedback","setFeedback","get","process","env","REACT_APP_API_BASE_URL","then","res","data","catch","err","console","error","handleOptionClick","questionId","selectedOption","correctAnswer","prev","setTimeout","newFeedback","className","children","map","q","question","options","opt","i","onClick","id","answer","disabled","undefined","style","backgroundColor"],"sources":["E:/Projects/Data Structure Project - Array Quiz App/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [feedback, setFeedback] = useState({}); // questionId => feedback\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/quiz`)\n      .then(res => setQuestions(res.data))\n      .catch(err => console.error(err));\n  }, []);\n\n  const handleOptionClick = (questionId, selectedOption, correctAnswer) => {\n    setSelectedAnswers(prev => ({\n      ...prev,\n      [questionId]: selectedOption\n    }));\n\n    setFeedback(prev => ({\n      ...prev,\n      [questionId]: selectedOption === correctAnswer ? '✅ Correct!' : '❌ Wrong!'\n    }));\n\n    // Auto-clear feedback for this question after 2s\n    setTimeout(() => {\n      setFeedback(prev => {\n        const newFeedback = { ...prev };\n        delete newFeedback[questionId];\n        return newFeedback;\n      });\n    }, 2000);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Quiz App</h1>\n      {questions.map(q => (\n        <div key={q.id} className=\"question-box\">\n          <h3>{q.question}</h3>\n          {q.options.map((opt, i) => (\n            <button\n              key={i}\n              onClick={() => handleOptionClick(q.id, opt, q.answer)}\n              disabled={selectedAnswers[q.id] !== undefined} // Disable after answering\n              style={{\n                backgroundColor: selectedAnswers[q.id] === opt\n                  ? (opt === q.answer ? 'lightgreen' : 'salmon')\n                  : 'white'\n              }}\n            >\n              {opt}\n            </button>\n          ))}\n          {feedback[q.id] && <p className=\"feedback\">{feedback[q.id]}</p>}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}