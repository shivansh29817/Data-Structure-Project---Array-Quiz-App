{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Data Structure Project - Array Quiz App\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [feedback, setFeedback] = useState({}); // questionId => feedback\n\n  useEffect(() => {\n    axios.get('http://127.0.0.1:5000/api/quiz').then(res => setQuestions(res.data)).catch(err => console.error(err));\n  }, []);\n  const handleOptionClick = (questionId, selectedOption, correctAnswer) => {\n    setSelectedAnswers(prev => ({\n      ...prev,\n      [questionId]: selectedOption\n    }));\n    setFeedback(prev => ({\n      ...prev,\n      [questionId]: selectedOption === correctAnswer ? '✅ Correct!' : '❌ Wrong!'\n    }));\n\n    // Auto-clear feedback for this question after 2s\n    setTimeout(() => {\n      setFeedback(prev => {\n        const newFeedback = {\n          ...prev\n        };\n        delete newFeedback[questionId];\n        return newFeedback;\n      });\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), questions.map(q => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: q.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), q.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleOptionClick(q.id, opt, q.answer),\n        disabled: selectedAnswers[q.id] !== undefined // Disable after answering\n        ,\n        style: {\n          backgroundColor: selectedAnswers[q.id] === opt ? opt === q.answer ? 'lightgreen' : 'salmon' : 'white'\n        },\n        children: opt\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)), feedback[q.id] && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"feedback\",\n        children: feedback[q.id]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 30\n      }, this)]\n    }, q.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fjOS3ZtkOOCSsSJSXYJkK40nwsM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","selectedAnswers","setSelectedAnswers","feedback","setFeedback","get","then","res","data","catch","err","console","error","handleOptionClick","questionId","selectedOption","correctAnswer","prev","setTimeout","newFeedback","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","q","question","options","opt","i","onClick","id","answer","disabled","undefined","style","backgroundColor","_c","$RefreshReg$"],"sources":["E:/Projects/Data Structure Project - Array Quiz App/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [feedback, setFeedback] = useState({}); // questionId => feedback\n\n  useEffect(() => {\n    axios.get('http://127.0.0.1:5000/api/quiz')\n      .then(res => setQuestions(res.data))\n      .catch(err => console.error(err));\n  }, []);\n\n  const handleOptionClick = (questionId, selectedOption, correctAnswer) => {\n    setSelectedAnswers(prev => ({\n      ...prev,\n      [questionId]: selectedOption\n    }));\n\n    setFeedback(prev => ({\n      ...prev,\n      [questionId]: selectedOption === correctAnswer ? '✅ Correct!' : '❌ Wrong!'\n    }));\n\n    // Auto-clear feedback for this question after 2s\n    setTimeout(() => {\n      setFeedback(prev => {\n        const newFeedback = { ...prev };\n        delete newFeedback[questionId];\n        return newFeedback;\n      });\n    }, 2000);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Quiz App</h1>\n      {questions.map(q => (\n        <div key={q.id} className=\"question-box\">\n          <h3>{q.question}</h3>\n          {q.options.map((opt, i) => (\n            <button\n              key={i}\n              onClick={() => handleOptionClick(q.id, opt, q.answer)}\n              disabled={selectedAnswers[q.id] !== undefined} // Disable after answering\n              style={{\n                backgroundColor: selectedAnswers[q.id] === opt\n                  ? (opt === q.answer ? 'lightgreen' : 'salmon')\n                  : 'white'\n              }}\n            >\n              {opt}\n            </button>\n          ))}\n          {feedback[q.id] && <p className=\"feedback\">{feedback[q.id]}</p>}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}